# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
  - docker build -t registry.gitlab.com/lucas.pleckspaen/gitlab-ks-agent:latest .
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  - docker push registry.gitlab.com/lucas.pleckspaen/gitlab-ks-agent:latest

k8s-deploy:
  image: docker:19.03.12
  stage: deploy
  script:
  - kubectl config get-contexts
  - kubectl config use-context lucas.pleckspaen/gitlab-ks-agent:k8s-gitlab-agent
  - kubectl delete secret registry.gitlab.com -n namespace
  - kubectl create secret docker-registry registry.gitlab.com --docker-server=https://registry.gitlab.com --docker-username=lucas.pleckspaen --docker-password=Gitlab17863124 --docker-email=lucas.pleckspaen@gmail.com -n dude
  - kubectl apply -f manifest/ -n namespace  
